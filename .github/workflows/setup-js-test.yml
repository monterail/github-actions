name: setup-js-test

on:
  push:
    branches: ['main']

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: ['**']

jobs:
  typecheck:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm i
        working-directory: setup-js

      - name: Typecheck
        run: npm run typecheck
        working-directory: setup-js

  test:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.pull_request.draft == false }}
    strategy:
      matrix:
        lockfile-mode: ['with-lockfile', 'no-lockfile']
        package-manager: ['npm', 'yarn']
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create example package.json
        run: cp ./.artifacts/package-json ./package.json

      - name: Create example lockfile
        uses: actions/github-script@v6
        if: ${{ matrix.lockfile-mode == 'with-lockfile' }}
        with:
          script: |
            const { copyFileSync } = require('fs');

            if ('${{ matrix.package-manager }}' === 'yarn') {
              copyFileSync('./.artifacts/yarn-lock', './yarn.lock');
              return;
            }

            copyFileSync('./.artifacts/package-lock', './package-lock.json');

      - name: Setup and install
        uses: ./setup-js
        id: setup
        with:
          package-manager: ${{ matrix.package-manager }}

  test-subdirectory:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create example package.json and lockfile
        run: |
          mkdir app
          cp ./.artifacts/package-json ./app/package.json
          cp ./.artifacts/package-lock ./app/package-lock.json

      - name: Setup and install
        uses: ./setup-js
        with:
          working-directory: app

  test-monorepo:
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.draft == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create lockfile in the root
        run: cp ./.artifacts/package-lock ./package-lock.json

      - name: Create example package.json inside a package
        run: |
          mkdir -p packages/foo
          cp ./.artifacts/package-json ./packages/foo/package.json

      - name: Setup and install
        uses: ./setup-js
        id: setup
        with:
          working-directory: packages/foo

      - name: Test if 'hash-strategy' is set to 'lockfile'
        run: |
          if [[ "${{ steps.setup.outputs.hash-strategy }}" != "lockfile" ]]
          then
            exit 1
          fi

